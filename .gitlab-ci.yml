stages:
  - build
  - test
  - package

variables:
  RUST_BACKTRACE: 1
  GIT_STRATEGY: clone  # Force a full clone instead of fetch

# Cache just the target directory for faster builds
cache:
  paths:
    - rust/target/

# Main build job
build:
  stage: build
  tags:
    - linux
  before_script:
    # Debug: Show current directory and list files
    - pwd
    - ls -la
    # Change to the rust directory
    - cd rust
    # Verify Rust is available
    - rustc --version
    - cargo --version
  script:
    # Build
    - cargo build --release
  artifacts:
    paths:
      - rust/target/release/

# Run tests
test:
  stage: test
  tags:
    - linux
  needs: [build]
  script:
    - cd rust
    - cargo test

# Linux build
linux:
  stage: package
  tags:
    - linux
  script:
    - cd rust
    - cargo build --release
  artifacts:
    paths:
      - rust/target/release/*.so
    expire_in: 1 week

# macOS build
macos:
  stage: package
  tags:
    - macos
  script:
    - cd rust
    - cargo build --release
  artifacts:
    paths:
      - rust/target/release/*.dylib
    expire_in: 1 week

# Windows build
windows:
  stage: package
  tags:
    - windows
  script:
    - cd rust
    - cargo build --release
  artifacts:
    paths:
      - rust/target/release/*.dll
    expire_in: 1 week
