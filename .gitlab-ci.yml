stages:
  - build
  - test
  - package

variables:
  CARGO_HOME: $HOME/.cargo  # Changed to use HOME instead of project dir
  RUST_BACKTRACE: 1

# Cache dependencies between jobs
cache:
  paths:
    - $HOME/.cargo/
    - target/

# Main build job
build:
  stage: build
  tags:
    - linux
  script:
    # Install Rust if not available
    - which rustup > /dev/null || curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path
    # Add cargo to PATH explicitly
    - export PATH="$HOME/.cargo/bin:$PATH"
    # Verify installation
    - rustup --version
    - cargo --version
    # Build
    - cargo build --release
  artifacts:
    paths:
      - target/release/

# Run tests
test:
  stage: test
  tags:
    - linux
  needs: [build]
  script:
    - export PATH="$HOME/.cargo/bin:$PATH"
    - cargo test

# Linux build
linux:
  stage: package
  tags:
    - linux
  script:
    - export PATH="$HOME/.cargo/bin:$PATH"
    - cargo build --release
  artifacts:
    paths:
      - target/release/*.so
    expire_in: 1 week

# macOS build
macos:
  stage: package
  tags:
    - macos
  script:
    - export PATH="$HOME/.cargo/bin:$PATH"
    - cargo build --release
  artifacts:
    paths:
      - target/release/*.dylib
    expire_in: 1 week

# Windows build
windows:
  stage: package
  tags:
    - windows
  script:
    - $env:Path += ";$HOME\.cargo\bin"
    - rustup default stable || (Invoke-WebRequest -Uri https://win.rustup.rs/x86_64 -OutFile rustup-init.exe; .\rustup-init.exe -y --no-modify-path)
    - cargo build --release
  artifacts:
    paths:
      - target/release/*.dll
    expire_in: 1 week
