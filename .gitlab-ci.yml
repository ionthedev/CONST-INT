stages:
  - build
  - test
  - package

variables:
  RUST_BACKTRACE: 1
  GIT_STRATEGY: clone
  # Don't use $HOME/.cargo as it's causing environment issues
  CARGO_HOME: $CI_PROJECT_DIR/.cargo

# Cache shared across all jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cargo/
    - rust/target/

# Linux build
linux_build:
  stage: build
  tags:
    - linux
  script:
    - echo "Running in $(pwd)"
    - ls -la
    - echo "Setting up Rust environment..."
    # Install Rust without requiring sudo
    - which rustc > /dev/null || curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    - source $HOME/.cargo/env || true
    - export PATH="$HOME/.cargo/bin:$PATH"
    - rustc --version || echo "Rust not available, continuing with install"
    - cargo --version || echo "Cargo not available, continuing with install"
    - cd rust || { echo "rust directory not found"; exit 1; }
    - cargo build --release --verbose
  artifacts:
    paths:
      - rust/target/release/
    expire_in: 1 week

# macOS build - this seems to be working, keeping as is
macos_build:
  stage: build
  tags:
    - macos
  script:
    - echo "Running in $(pwd)"
    - ls -la
    - echo "Setting up Rust environment..."
    - which rustc > /dev/null || curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    - export PATH="$HOME/.cargo/bin:$PATH"
    - xcode-select --install || true
    - rustc --version
    - cargo --version
    - cd rust || { echo "rust directory not found"; exit 1; }
    - cargo build --release --verbose
  artifacts:
    paths:
      - rust/target/release/
      - rust/target/release/*.dylib
    expire_in: 1 week

# Windows build - fixing PowerShell issues
windows_build:
  stage: build
  tags:
    - windows
  variables:
    # Force Windows to use cmd instead of pwsh
    GIT_BASH: "0" 
  script:
    - echo "Running in %CD%"
    - dir
    - echo "Setting up Rust environment..."
    # Use curl.exe for Windows
    - where rustc >nul 2>&1 || (curl.exe -sSf https://win.rustup.rs/x86_64 -o rustup-init.exe && rustup-init.exe -y --default-toolchain stable --profile minimal)
    - set PATH=%USERPROFILE%\.cargo\bin;%PATH%
    - rustc --version
    - cargo --version
    - cd rust
    - cargo build --release --verbose
  artifacts:
    paths:
      - rust/target/release/
      - rust/target/release/*.dll
    expire_in: 1 week

# Test jobs would go here but commenting out for now to focus on fixing build issues

# Package jobs would go here but commenting out for now to focus on fixing build issues
