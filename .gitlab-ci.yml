stages:
  - build
  - test
  - package

variables:
  RUST_BACKTRACE: 1
  GIT_STRATEGY: clone  # Force a full clone instead of fetch

# Cache just the target directory for faster builds
cache:
  paths:
    - rust/target/
    - $HOME/.cargo/

# Main build job
build:
  stage: build
  tags:
    - linux
  before_script:
    # Debug: Show current directory and list files
    - pwd
    - ls -la
    # Install Rust if not available
    - which rustc > /dev/null || curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    - export PATH="$HOME/.cargo/bin:$PATH"
    # Change to the rust directory
    - cd rust
    # Verify Rust is available
    - rustc --version
    - cargo --version
  script:
    # Build
    - cargo build --release
  artifacts:
    paths:
      - rust/target/release/

# Run tests
test:
  stage: test
  tags:
    - linux
  needs: [build]
  before_script:
    # Install Rust if not available
    - which rustc > /dev/null || curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    - export PATH="$HOME/.cargo/bin:$PATH"
  script:
    - cd rust
    - cargo test

# Linux build
linux:
  stage: package
  tags:
    - linux
  before_script:
    # Install Rust if not available
    - which rustc > /dev/null || curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    - export PATH="$HOME/.cargo/bin:$PATH"
  script:
    - cd rust
    - cargo build --release
  artifacts:
    paths:
      - rust/target/release/*.so
    expire_in: 1 week

# macOS build
macos:
  stage: package
  tags:
    - macos
  before_script:
    # Install Rust if not available
    - which rustc > /dev/null || curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
    - export PATH="$HOME/.cargo/bin:$PATH"
  script:
    - cd rust
    - cargo build --release
  artifacts:
    paths:
      - rust/target/release/*.dylib
    expire_in: 1 week

# Windows build
windows:
  stage: package
  tags:
    - windows
  before_script:
    # Install Rust if not available
    - where rustc >nul 2>&1 || (curl -sSf https://win.rustup.rs/x86_64 -o rustup-init.exe && .\rustup-init.exe -y)
    - $env:Path += ";$HOME\.cargo\bin"
  script:
    - cd rust
    - cargo build --release
  artifacts:
    paths:
      - rust/target/release/*.dll
    expire_in: 1 week
